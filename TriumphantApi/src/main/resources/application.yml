spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/tcimemberdb
    username: PiousAn
    password: Pious123
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration # Make sure your migration scripts are in this folder
    baseline-on-migrate: true # Set this to true if you're migrating an existing database

server:
  port: 8082

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ChurchApi
            client-secret: yL1pRHZwRmEd2SHfD4qAwYjoWeExgUQA
            client-name: ChurchApp
            scope: openid,profile,email
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/keycloak"
            provider: keycloak

        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/AppRealm
            authorization-uri: http://localhost:8080/realms/AppRealm/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/AppRealm/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/realms/AppRealm/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/AppRealm/protocol/openid-connect/certs

      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/AppRealm
          jwk-set-uri: http://localhost:8080/realms/AppRealm/protocol/openid-connect/certs
          client-id: ChurchApi